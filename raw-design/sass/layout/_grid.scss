$column-number: 12;
.row{
    max-width: $grid-width;
    margin: 0 auto;

    @include responsive(tab-port){
        max-width: 50rem;
        padding: 0 3rem;
    }

    &:not(:last-child){
        margin-bottom: $gutter-vertical;
        @include responsive(tab-port){
            margin-bottom: $gutter-vertical-sm;
        }
    }
    @include clearFix;
    //Select all the elements that the attributes starts with 'col-'
    //Start ^
    //Ends $
    //All that contains *
    [class^="col-"]{
        float: left;
        &:not(:last-child){
        margin-right: 1rem;

        //     margin-right: $gutter-horizontal;
        //     @include responsive(tab-port){
        //         margin-right: 0;
        //         margin-bottom: $gutter-vertical-sm;
        //     }
        }
        // @include responsive(tab-port){
        //     width: 100% !important;
        // }
    }
    // .col-1-of-2{
    //     width: calc((100% - #{$gutter-horizontal})/2);
    // }
    // .col-1-of-3{
    //     width: calc((100% - 2 * #{$gutter-horizontal})/3);
    // }
    // .col-2-of-3{
    //     width: calc( 2 * ((100% - 2 * #{$gutter-horizontal})/3) + #{$gutter-horizontal});
    // }
    // .col-1-of-4{
    //     width: calc((100% - 3 * #{$gutter-horizontal})/4);
    // }
    // .col-2-of-4{
    //     width: calc( 2 * ((100% - 3 * #{$gutter-horizontal})/4)   + #{$gutter-horizontal} );
    // }
    // .col-3-of-4{
    //     width: calc( 3 * ((100% - 3 * #{$gutter-horizontal})/4) + (2 * #{$gutter-horizontal}) );
    // }
    /*
    */
   @for $k from 1 to $column-number +1{
        .col-#{$k}-of-#{$column-number}{
            width: calc((100% / #{$column-number}) * #{$k});
        }
   }
    /*
        This write responsive cols
    */
    $breakpoints-keys: map-keys($screen-breakpoints);
    $breakpoints-values: map-values($screen-breakpoints);
    @for $i from 1 to length($breakpoints-keys)+1 {
        @for $j from 1 to $column-number +1{
            @if $i < length($breakpoints-keys) {
                .col-#{nth($breakpoints-keys, $i)}-#{$j}-of-#{$column-number} {
                    @media (min-width: nth($breakpoints-values, $i)) and (max-width: calc(#{nth($breakpoints-values, $i+1)} - 1px ) ) {
                        width: calc((100% / #{$column-number}) * #{$j});
                    }
                }
            } 
            @else {
                .col-#{nth($breakpoints-keys, $i)}-#{$j}-of-#{$column-number} {
                    @media (min-width: nth($breakpoints-values, $i)) {
                        width: calc((100% / #{$column-number}) * #{$j});
                    }
                }
            }
        }
    }
}